# Generated by Django 5.2.5 on 2025-10-07 14:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Phrase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.TextField()),
                ("meaning", models.TextField(blank=True)),
                ("topic", models.CharField(blank=True, max_length=64)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("audio_key", models.CharField(blank=True, max_length=255)),
                ("video_key", models.CharField(blank=True, max_length=255)),
                ("scene_image_key", models.CharField(blank=True, max_length=255)),
                ("duration_sec", models.PositiveIntegerField(default=0)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("normal", "Normal"),
                            ("hard", "Hard"),
                        ],
                        default="normal",
                        max_length=16,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Expression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("phrase", "Phrase"),
                            ("word", "Word"),
                            ("idiom", "Idiom"),
                            ("sentence", "Sentence"),
                        ],
                        default="phrase",
                        max_length=32,
                    ),
                ),
                ("text", models.TextField()),
                ("meaning", models.TextField(blank=True)),
                ("phonetic", models.CharField(blank=True, max_length=255)),
                ("image_key", models.CharField(blank=True, max_length=255)),
                ("audio_key", models.CharField(blank=True, max_length=255)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="phrases.expression",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="PhraseExpression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "expression",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="phrases.expression",
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="phrases.phrase"
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.AddField(
            model_name="phrase",
            name="expressions",
            field=models.ManyToManyField(
                related_name="phrases",
                through="phrases.PhraseExpression",
                to="phrases.expression",
            ),
        ),
        migrations.CreateModel(
            name="PlaybackLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("play_ms", models.PositiveIntegerField()),
                ("completed", models.BooleanField(default=False)),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("feed", "Feed"),
                            ("favorites", "Favorites"),
                            ("search", "Search"),
                        ],
                        max_length=32,
                    ),
                ),
                ("device_type", models.CharField(blank=True, max_length=32)),
                ("network_type", models.CharField(blank=True, max_length=32)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "phrase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="phrases.phrase"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playback_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed", models.BooleanField(default=False)),
                ("replay_count", models.PositiveIntegerField(default=0)),
                ("last_reviewed", models.DateTimeField(blank=True, null=True)),
                ("is_favorite", models.BooleanField(default=False)),
                (
                    "expression",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="phrases.expression",
                    ),
                ),
                (
                    "phrase",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="phrases.phrase",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "playback_speed",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=3),
                ),
                (
                    "volume",
                    models.DecimalField(decimal_places=2, default=0.8, max_digits=3),
                ),
                ("show_japanese", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="setting",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="expression",
            index=models.Index(fields=["type"], name="phrases_exp_type_bc2f5f_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="phraseexpression",
            unique_together={("phrase", "expression")},
        ),
        migrations.AddIndex(
            model_name="phrase",
            index=models.Index(fields=["topic"], name="phrases_phr_topic_14423f_idx"),
        ),
        migrations.AddIndex(
            model_name="phrase",
            index=models.Index(
                fields=["difficulty"], name="phrases_phr_difficu_a635ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="playbacklog",
            index=models.Index(
                fields=["user", "created_at"], name="phrases_pla_user_id_c5fd06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprogress",
            index=models.Index(
                fields=["user", "is_favorite"], name="phrases_use_user_id_f6ac97_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="userprogress",
            constraint=models.UniqueConstraint(
                fields=("user", "phrase", "expression"),
                name="uniq_user_progress_target",
            ),
        ),
    ]
